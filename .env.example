# Docker Compose用 環境変数設定サンプル
# =================================================================
# このファイルをコピーして .env ファイルを作成し、適切な値を設定してください
# cp .env.example .env

# =================================================================
# Docker設定
# =================================================================
COMPOSE_PROJECT_NAME=glasses_store
COMPOSE_FILE=docker-compose.yml

# =================================================================
# アプリケーション設定
# =================================================================
# Node.js環境 (development | production)
NODE_ENV=development

# ポート設定
FRONTEND_PORT=3000
BACKEND_PORT=3001
DB_PORT=5432
REDIS_PORT=6379
NGINX_PORT=80
NGINX_SSL_PORT=443

# =================================================================
# PostgreSQL設定 ※本番環境では必ず変更してください
# =================================================================
POSTGRES_DB=glasses_store_db
POSTGRES_USER=glasses_user
POSTGRES_PASSWORD=your_secure_postgres_password
POSTGRES_ROOT_PASSWORD=your_secure_root_password

# PostgreSQL データボリューム
POSTGRES_DATA_PATH=./data/postgresql

# =================================================================
# Redis設定 ※本番環境では必ず変更してください
# =================================================================
REDIS_PASSWORD=your_secure_redis_password
REDIS_DATA_PATH=./data/redis

# =================================================================
# Nginx設定
# =================================================================
# SSL証明書パス（本番環境用）
SSL_CERT_PATH=./certs/server.crt
SSL_KEY_PATH=./certs/server.key

# ログファイルパス
NGINX_LOG_PATH=./logs/nginx

# =================================================================
# 共有ボリューム設定
# =================================================================
# アップロードファイル保存
UPLOADS_PATH=./uploads

# ログファイル保存
LOGS_PATH=./logs

# バックアップ保存
BACKUPS_PATH=./backups

# SSL証明書保存
CERTS_PATH=./certs

# =================================================================
# 開発環境用設定
# =================================================================
# ホットリロード有効化
FRONTEND_HOT_RELOAD=true

# デバッグモード
DEBUG_MODE=false

# =================================================================
# セキュリティ設定
# =================================================================
# ネットワーク設定
DOCKER_NETWORK_NAME=glasses_network

# コンテナユーザー設定
APP_USER_ID=1000
APP_GROUP_ID=1000

# =================================================================
# バックアップ設定
# =================================================================
# cron形式でスケジュール設定
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# =================================================================
# AWS環境変数（AWSへの移行時に必要）
# =================================================================
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_DEFAULT_REGION=ap-northeast-1

# ECS/ECR設定
# ECR_REGISTRY=123456789012.dkr.ecr.ap-northeast-1.amazonaws.com
# ECS_CLUSTER_NAME=glasses-store-cluster
# ECS_SERVICE_NAME=glasses-store-service

# RDS設定（AWS移行時）
# RDS_HOSTNAME=your-rds-instance.xxxxx.ap-northeast-1.rds.amazonaws.com
# RDS_DB_NAME=glasses_store_db
# RDS_USERNAME=glasses_user
# RDS_PASSWORD=your_secure_rds_password

# ElastiCache設定（AWS移行時）
# ELASTICACHE_ENDPOINT=your-elasticache-cluster.xxxxx.cache.amazonaws.com

# S3設定（ファイルストレージ用）
# S3_BUCKET_NAME=glasses-store-uploads
# S3_REGION=ap-northeast-1

# CloudFront設定（CDN用）
# CLOUDFRONT_DISTRIBUTION_ID=EXXXXXXXXXX
# CLOUDFRONT_DOMAIN=dxxxxxxxxxx.cloudfront.net